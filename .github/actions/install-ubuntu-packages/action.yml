name: "Install Ubuntu packages"

description: "Installs the necessary Ubuntu packages"

branding.icon: download

inputs:
  with_ninja:
    description: If set, adds the ninja packages
    required: false
    default: ${{ true }}
  with_clang:
    description: If set, adds the clang packages
    required: false
    default: ${{ false }}
  with_llvm_linker:
    description: If set, adds the llvm packages
    required: false
    default: ${{ true }}
  with_doxygen:
    description: If set to, adds the doxygen packages
    required: false
    default: ${{ false }}
  with_lcov:
    description: If set, adds the packages for code coverage analysis
    required: false
    default: ${{ false }}
    
runs:
  using: "composite"
  steps:
    - name: Add the fundamentals
      run: echo "PACKAGE_LIST=g++ cmake clang-tidy cmake cppcheck iwyu libboost-all-dev librange-v3-dev libeigen3-dev " >> $GITHUB_ENV
      shell: bash
    - name: Add ninja
      if: inputs.with_ninja
      env:
        PACKAGE_LIST: ${{ format('{0} {1} ',env.PACKAGE_LIST, 'ninja-build') }}
      run: env
      shell: bash
    - name: Add clang
      if: inputs.with_clang
      env:
        PACKAGE_LIST: ${{ format('{0} {1} ',env.PACKAGE_LIST, 'clang' }}
      run: env
      shell: bash
    - name: Add llvm
      if: inputs.with_llvm_linker
      env: 
        PACKAGE_LIST: ${{ format('{0} {1} ',env.PACKAGE_LIST, 'lld' }}
      run: env
      shell: bash
    - name: Add doxygen
      if: inputs.with_doxygen
      env:
        PACKAGE_LIST: ${{ format('{0} {1} ',env.PACKAGE_LIST, 'doxygen graphviz gsfonts biber' }}
      run: env
      shell: bash
    - name: Add lcov
      if: inputs.with_lcov
      env:
        PACKAGE_LIST: ${{ format('{0} {1} ',env.PACKAGE_LIST, 'lcov' }}
      run: env
      shell: bash
    - name: Install
      run: |
        sudo apt-get update
        sudo apt-get install ${{ env.PACKAGE_LIST }}  --no-install-recommends
      shell: bash

