name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Manual trigger
  workflow_dispatch:  

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Required by CodeQL
      security-events: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      # CMake needs doxygen to build the docs target
      run: |
        sudo apt-get update
        sudo apt-get install g++ clang lld ninja-build \
          libboost-all-dev librange-v3-dev libeigen3-dev \
          clang-tidy cmake cppcheck iwyu \
          doxygen graphviz gsfonts biber
        
    - name: Build with g++
      run: |
        cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}  -D ENABLE_CODE_COVERAGE=ON -D USE_SANITISER=ON -D CMAKE_CXX_COMPILER=g++
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test the g++ build
      working-directory: ${{github.workspace}}/build
      run: |
        cmake ${{github.workspace}} -DUNIT_TEST_LEVEL=1_Continuous
        ctest -C ${{env.BUILD_TYPE}} -VV

    - name: Build with clang
      # Uses the platform default as the build system 
      run: |
        cmake -B ${{github.workspace}}/clang/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D USE_SANITISER=ON -D CMAKE_CXX_COMPILER=clang++
        cmake --build ${{github.workspace}}/clang/build --config ${{env.BUILD_TYPE}} -j2

    - name: Test the clang build
      working-directory: ${{github.workspace}}/clang/build
      run: |
        cmake ${{github.workspace}} -D UNIT_TEST_LEVEL=1_Continuous
        ctest -C ${{env.BUILD_TYPE}} -VV
      
    - name: lcov
      # Coverage report
      # gcov version must match that of g++
      working-directory: ${{github.workspace}}/build
      run: |
        sudo apt-get install lcov
        lcov --directory . --capture --output-file coverage.lcov --gcov-tool gcov
        lcov --remove coverage.lcov '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.lcov
        
    - name: Codecov
      # Sends the coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./build/coverage.lcov
        flags: unittests
        fail_ci_if_error: true
        
    - name: Generate documentation
      run: |
        cmake --build ${{github.workspace}}/build --target docs
        
    - name: Deploy documentation
      # Deploys the documentation to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3.9.0
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/html
        
    # CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: cpp, python

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
          
